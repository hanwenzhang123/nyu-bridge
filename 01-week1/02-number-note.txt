Counting in base #
Binary - 2 (0, 1) 0, 1, 10, 11, 100, 101, 110, 111, 1000, 1001, 1010
Quinary - 5 (0, 1, 2, 3, 4)  44, 100
Octal - 8 (0, 1, 2, 3, 4, 5, 6, 7) 77, 100
Decimal - 10 (0, 1, 2, 3, 4, 5, 6, 7, 8, 9) 99, 100
Hexadecimal - 16 (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, a, b, c, d, e, f)
  0, 1, 2, ..., 9, a, ..., e, f, 10, 11, ..., 19, 1a, 1b, ..., 1f, 20, ..., 30, ..., ff, 100
  
  
Base Conversions
- N in base b => N in decimal
- N in decimal => N in base b
- N in binary => N in Hexadecimal

Anything with a 0 power is 1

Signed Numbers
(26)decimal = (11010)binary
(-26)decimal = (-11010)binary

Approaches to represent signed numbers using only 0s and 1s:
- Sign and Magnitude
  (left most bit is defined the positive/negative expression)
0 - positive
1 - negative
- Two's Complement


Two's Complement
in a k-bit two's complement representation of a number:
- A positive integer is represented in its (k-1) bit unsigned binary representation, padded with a 0 to its left
- the sum of a number and its additive inverse is 2 to the power of k.

starting 0 - positive
starting 1 - negative

(26)decimal = (00011010) 8 bit 2's complement
(-26)decimal = (11100110) 8 bit 2's complement

 00011010  ->26
+11100110  ->-26
100000000  ->2 to the power of 8


(00101101) 8 bit 2's complement = (45)decimal
(11101010) 8 bit 2's complement = (-22)decimal

 11101010  ->-22
+00010110  ->22
100000000  ->2 to the power of 8
